public class Solution {
public int maximumGap(int[] nums) {
    if(nums==null||nums.length<2)
        return 0;
    int max=nums[0];
    for(int i=1; i<nums.length; i++)
        max=Math.max(max, nums[i]);
    int exp=1;
    int R=10;
    int len=nums.length;
    int []aux=new int[len];
    while(max/exp>0)
    {
        int []count=new int[R];
        for(int i=0; i<len; i++)
        {
            count[(nums[i]/exp%10)]++;
        }
        for(int i=1; i<R; i++)
            count[i]+=count[i-1];
        for(int i=len-1; i>=0; i--)
        {
            aux[--count[nums[i]/exp%10]]=nums[i];
        }
        for(int i=0; i<len; i++)
            nums[i]=aux[i];
        exp*=10;
    }
    int maxGap=0;
    for(int i=1; i<len; i++)
    {
        maxGap=Math.max(maxGap, nums[i]-nums[i-1]);
    }
    return maxGap;
}
}