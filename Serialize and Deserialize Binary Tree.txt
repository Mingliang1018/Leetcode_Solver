/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
import java.util.*;
public class Codec {

// Encodes a tree to a single string.
public String serialize(TreeNode root) 
{
   if(root==null)
    return "#";
   return root.val+","+serialize(root.left)+","+serialize(root.right);
}

// Decodes your encoded data to tree.
int tag=0;
public TreeNode deserialize(String data) 
{
    String []str = data.split(",");
    return build(str);
}

private TreeNode build(String[] str)
{
    if(tag>=str.length)
        return null;
    else if(str[tag].equals("#"))
    {
        tag++;
        return null;
        
    }
    TreeNode root = new TreeNode(Integer.parseInt(str[tag++]));
    root.left = build(str);
    root.right = build(str);
    return root;
}
}

// Your Codec object will be instantiated and called as such:
// Codec codec = new Codec();
// codec.deserialize(codec.serialize(root));