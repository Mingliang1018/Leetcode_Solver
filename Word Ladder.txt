import java.util.*;
public class Solution {
    public int ladderLength(String beginWord, String endWord, Set<String> wordDict) {
        if(beginWord == null|| endWord ==null)
            return 0;
        if(beginWord.equals(endWord))
            return 1;
        Queue<String> que = new LinkedList();
        Hashtable<String, Integer> table = new Hashtable();
        
        que.offer(beginWord);
        table.put(beginWord, 1);
        while(!que.isEmpty())
        {
            String tmp = que.poll();
            int lev = table.get(tmp);
            
            for(int i=0; i<tmp.length(); i++)
            {
            	StringBuffer bs =new StringBuffer(tmp);
                for(char ch='a'; ch<='z'; ch++)
                {
                    bs.setCharAt(i, ch);
                    String ss = bs.toString();
                    if(ss.equals(endWord))
                        return lev+1;
                    if(wordDict.contains(ss)&&!table.containsKey(ss))
                    {
                        que.offer(ss);
                        table.put(ss, lev+1);
                    }
                }
            }
        }
        return 0;
        
    }
}