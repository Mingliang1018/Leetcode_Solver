class MyStack {
    // Push element x onto stack.
    Queue<Integer> que = new LinkedList();
    public void push(int x) {
        que.offer(x);
    }

    // Removes the element on top of the stack.
    public void reverse(){
        int times=que.size()-1;
        while(times-->0)
        {
            que.offer(que.poll());
        }
    }
    public void pop() {
        reverse();
        que.poll();
        
    }

    // Get the top element.
    public int top() {
        reverse();
        int tmp=que.peek();
        que.offer(que.poll());
        return tmp;
    }

    // Return whether the stack is empty.
    public boolean empty() {
        return que.isEmpty();
    }
}