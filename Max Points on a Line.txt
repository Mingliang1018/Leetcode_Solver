/**
 * Definition for a point.
 * class Point {
 *     int x;
 *     int y;
 *     Point() { x = 0; y = 0; }
 *     Point(int a, int b) { x = a; y = b; }
 * }
 */
import java.util.*;
public class Solution {
    public int maxPoints(Point[] points) {
        int maxNum=0;
        int len=points.length;
        
        for(int i=0; i<len; i++)
        {
            int max=0;
            int count=0;
            int bonus=0;
            Hashtable<Double, Integer> table = new Hashtable();
            Point p = points[i];
            for(int j=0; j<len; j++)
            {
                Point q = points[j];
                if(p.x==q.x&&p.y==q.y)
                {
                    bonus++;
                }
                else if(p.x==q.x)
                {
                    count++;
                    max=Math.max(max, count);
                }
                else
                {
                    double slope = ((double)p.y-q.y)/((double)p.x-q.x);
                    if(table.containsKey(slope))
                    {
                        table.put(slope, table.get(slope)+1);
                    }
                    else
                    {
                        table.put(slope, 1);
                    }
                    max = Math.max(max, table.get(slope));
                    
                }
            }
            maxNum = Math.max(maxNum, max+bonus);
        }
        return maxNum;
        
    }
}