public class Solution {
    public int maxProfit(int k, int[] prices) {
        int len=prices.length;
        if(len<2)
            return 0;
        if(k>=len/2)
        {
            int total=0;
            for(int i=1; i<len; i++)
            {
                if(prices[i]-prices[i-1]>0)
                    total+=prices[i]-prices[i-1];
            }
            return total;
        }
        int [][]maxBuy=new int[len][k+1];
        int [][]maxPro=new int[len][k+1];
        for(int i=0; i<len; i++)
        {
            maxBuy[i][0]=Integer.MIN_VALUE;
            maxPro[i][0]=0;
        }
        for(int j=1; j<=k; j++)
        {
            maxBuy[0][j]=-prices[0];
        }
        
        for(int i=1; i<len; i++)
        {
            for(int j=1; j<=k; j++)
            {
                maxBuy[i][j]=Math.max(maxBuy[i-1][j], maxPro[i-1][j-1]-prices[i]);
                maxPro[i][j]=Math.max(maxPro[i-1][j], maxBuy[i-1][j]+prices[i]);
            }
        }
        return maxPro[len-1][k];
        
    }
}