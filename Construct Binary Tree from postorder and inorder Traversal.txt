/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
import java.util.*;
public class Solution {
    public TreeNode build(int [] postorder, int s1, int e1, Hashtable<Integer, Integer> table, int s2, int e2)
    {
        if(s1>e1)
            return null;
        TreeNode root=new TreeNode(postorder[e1]);
        int index=table.get(postorder[e1]);
        root.left=build(postorder, s1, s1+index-s2-1, table, s2, index-1);
        root.right=build(postorder, s1+index-s2, table, index+1, e1);
        return root;
    }
    public TreeNode buildTree(int[] inorder, int[] postorder) {
        Hashtable<Integer, Integer> table=new Hashtable();
        for(int i=0; i<inorder.length; i++)
        {
            table.put(inorder[i], i);
        }
        return build(postorder, 0, postorder.length-1, table, 0, inorder.length-1);
    }
}