{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
\cocoascreenfonts1{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab1120
\pard\pardeftab1120\pardirnatural

\f0\fs22 \cf0 public class Solution \{\
    public int calculateMinimumHP(int[][] dungeon) \{\
        int m=dungeon.length;\
        int n=dungeon[0].length;\
        int [][]dp=new int[m][n];\
        \
        dp[m-1][n-1]=Math.max(1, 1-dungeon[m-1][n-1]);\
        for(int i=m-2; i>=0; i--)\
        \{\
            dp[i][n-1]=Math.max(dp[i+1][n-1]-dungeon[i][n-1], 1);\
        \}\
        for(int j=n-2; j>=0; j--)\
        \{\
            dp[m-1][j]=Math.max(dp[m-1][j+1]-dungeon[m-1][j], 1);\
        \}\
        for(int i=m-2; i>=0; i--)\
        \{\
            for(int j=n-2; j>=0; j--)\
            \{\
                dp[i][j]=Math.max(Math.min(dp[i+1][j], dp[i][j+1])-dungeon[i][j], 1);\
            \}\
        \}\
        return dp[0][0];\
        \
    \}\
\}}