public class Solution {
    Stack<Character> sta = new Stack();
    Stack<Integer> sta1 = new Stack();
    public void startCalculate()
    {
        if(sta.isEmpty()||sta.peek()=='(')
        {
            return;
        }
        char flag = sta.pop();
        int num2 = sta1.pop();
        int num1 = sta1.pop();
        switch(flag)
        {
            case '+':
                sta1.push(num1+num2);
                break;
            case '-':
                sta1.push(num1-num2);
                break;
        }
            
    }
    public int calculate(String s) {
        int i=0;
        while(i<s.length())
        {
            char ch = s.charAt(i);
            if(ch=='+'||ch=='-')
            {
               startCalculate();
               sta.push(ch);
            }
            else if(ch=='(')
                sta.push(ch);
            else if(ch==')')
            {
                startCalculate();
                sta.pop();
            }
            else if(ch>='0'&&ch<='9')
            {
                int j=i;
                while(j<s.length()&&(s.charAt(j)>='0'&&s.charAt(j)<='9'))
                {
                    j++;
                }
                int num=Integer.valueOf(s.substring(i, j));
                sta1.push(num);
                i=j-1;
            }
            i++;
            
        }
        startCalculate();
        if(sta1.isEmpty())
            return 0;
        return sta1.peek();
        
    }
}